version: "3.8"

services:
  notebook-db:
    image: pgvector/pgvector:pg16
    container_name: notebook-db
    ports:
      - "5434:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: notebook_lm_db
    volumes:
      - notebook_db_data:/var/lib/postgresql/data
      - ./init-scripts/init-pgvector.sql:/docker-entrypoint-initdb.d/init-pgvector.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - notebook_network
    restart: unless-stopped

  notebook-redis:
    image: redis:7-alpine
    container_name: notebook-redis
    ports:
      - "6379:6379"
    command: redis-server --requirepass yourpassword
    volumes:
      - notebook_redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - notebook_network
    restart: unless-stopped

  notebook-localstack:
    image: localstack/localstack:latest
    container_name: notebook-localstack
    ports:
      - "4566:4566"
      - "4510-4559:4510-4559"
    environment:
      SERVICES: s3,dynamodb,ses,sqs
      DEFAULT_REGION: ap-south-1
      DEBUG: 1
      PERSISTENCE: 1
      AWS_ACCESS_KEY_ID: test
      AWS_SECRET_ACCESS_KEY: test
      GATEWAY_LISTEN: 0.0.0.0:4566
      EAGER_SERVICE_LOADING: 1
    volumes:
      - notebook_localstack_data:/var/lib/localstack
      - ./init-scripts:/etc/localstack/init/ready.d
      - /var/run/docker.sock:/var/run/docker.sock
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4566/_localstack/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - notebook_network
    restart: unless-stopped

volumes:
  notebook_db_data:
    driver: local
  notebook_redis_data:
    driver: local
  notebook_localstack_data:
    driver: local

networks:
  notebook_network:
    driver: bridge
